<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Рулетка с иконками</title>
    <!-- Подключение Font Awesome для иконок -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" integrity="sha512-pIVp3At9/7LMfj7Q9V5iDOWw5QbdjQuXJd0Y3/ZiF34i8VQ7t96bYce8ZwF69NPLQw+mC8Bm5H2b8Hc8a6+eBA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: #eaeaea;
            margin: 0;
            padding: 30px 20px;
            display: flex;
            flex-direction: column;
            align-items: center;
            w color: #333;
        }

        span{
            color:black;
        }

        .roulette-container {
            position: relative;
            width: 90%;
            max-width: 800px;
            overflow: hidden;
            border: 1px solid #bbb;
            border-radius: 10px;
            background: #fff;
            box-shadow: 0 2px 6px rgba(0,0,0,0.1);
            margin-bottom: 30px;
            padding: 10px 0;
        }

        .roulette-track {
            display: flex;
            transition: transform 3s cubic-bezier(0.33, 1, 0.68, 1);
        }

        .roulette-item {
            flex: 0 0 auto;
            width: 120px;
            height: 120px;
            margin: 0 10px;
            border: 2px solid #ddd;
            border-radius: 10px;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            background: #fafafa;
            transition: border 0.3s, box-shadow 0.3s;
        }

            .roulette-item.active {
                border: 2px solid #ff5722;
                box-shadow: 0 0 10px rgba(255,87,34,0.6);
            }

            .roulette-item i {
                font-size: 40px;
                margin-bottom: 8px;
                color: #555;
            }

            .roulette-item span {
                font-size: 14px;
                font-weight: 500;
            }

        .arrow {
            width: 0;
            height: 0;
            border-left: 25px solid transparent;
            border-right: 25px solid transparent;
            border-bottom: 25px solid #ff5722;
            margin-bottom: 20px;
        }

        .start-btn {
            padding: 12px 25px;
            font-size: 16px;
            background: #ff5722;
            color: #fff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            box-shadow: 0 2px 4px rgba(0,0,0,0.2);
            transition: background 0.3s;
        }

            .start-btn:hover {
                background: #e64a19;
            }

        .prize-modal {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            display: none;
            background: rgba(0, 0, 0, 0.5);
            justify-content: center;
            align-items: center;
            padding: 20px;
        }

        .prize-modal-content {
            background: #fff;
            padding: 25px 30px;
            border-radius: 8px;
            text-align: center;
            max-width: 400px;
            width: 100%;
            box-shadow: 0 3px 10px rgba(0,0,0,0.2);
        }

            .prize-modal-content h2 {
                margin-top: 0;
                color: #ff5722;
            }

        .close-btn {
            margin-top: 15px;
            padding: 8px 16px;
            font-size: 15px;
            background: #ff5722;
            color: #fff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background 0.3s;
        }

            .close-btn:hover {
                background: #e64a19;
            }
    </style>
</head>
<body>
    <!-- Рулетка -->
    <div class="roulette-container">
        <div class="roulette-track" id="rouletteTrack">
            <!-- Элементы рулетки: иконка и слово -->
            <div class="roulette-item" id="Barn">
                <img src="~/icons/Barn.png" />
                <span>Амбар</span>
            </div>
            <div class="roulette-item" id="Grain">
                <img src="~/icons/Grain.png" />
                <span>Зерно</span>
            </div>
            <div class="roulette-item" id="Waxws">
                <img src="~/icons/Money.png" />
                <span>Waxw's</span>
            </div>
            <div class="roulette-item" id="RareGrain">
                <img src="~/icons/RareGrain.png" />
                <span>Редкое зерно</span>
            </div>
            <div class="roulette-item" id="Water">
                <img src="~/icons/Water.png" />
                <span>Вода</span>
            </div>
            <div class="roulette-item" id="WaterTower">
                <img src="~/icons/WaterTower.png" />
                <span>Водонапорная башни</span>
            </div>
            <!-- Можно добавить дополнительные элементы -->
        </div>
    </div>

    <!-- Стрелка -->
    <div class="arrow"></div>

    <!-- Кнопка "Начать" -->
    <button class="start-btn" id="startBtn">Начать</button>

    <!-- Модальное окно с наградой -->
    <div class="prize-modal" id="prizeModal">
        <div class="prize-modal-content">
            <h2>Поздравляем!</h2>
            <span id="prizeText">Вы выиграли приз!</span>
            <button class="close-btn" id="closeBtn">Закрыть</button>
        </div>
    </div>

    <script>
        const startBtn = document.getElementById('startBtn');
        const rouletteTrack = document.getElementById('rouletteTrack');
        const items = document.querySelectorAll('.roulette-item');
        const prizeModal = document.getElementById('prizeModal');
        const prizeText = document.getElementById('prizeText');
        const closeBtn = document.getElementById('closeBtn');

        let spinning = false;

        startBtn.addEventListener('click', () => {
          if (spinning) return;
          spinning = true;

         fetch('/Api/Roulette/Spin')
            .then(response => {
             // Проверяем, успешно ли выполнен запрос (статус в диапазоне 200–299)
             if (!response.ok) {
                // Если запрос не успешен, генерируем ошибку с соответствующим статусом
                throw new Error(`HTTP error! Status: ${response.status}`);
             }
          // Парсим ответ в формате JSON и возвращаем результат
          return response.json();
        })
        .then(data => {
          // Обрабатываем данные, полученные от сервера// Убираем предыдущую подсветку
          items.forEach(item => item.classList.remove('active'));

          // Выбираем случайный элемент для остановки
          const totalItems = items.length;
          const selectedIndex = Math.floor(Math.random() * totalItems);
          const selectedItem = document.getElementById(data.result);
          console.log(data);
          console.log(data.result);

          // Получаем ширину одного элемента с учетом внешних отступов (margin)
          const itemStyle = window.getComputedStyle(items[0]);
          const itemWidth = items[0].offsetWidth + parseInt(itemStyle.marginLeft) + parseInt(itemStyle.marginRight);

          // Задаем количество полных циклов прокрутки
          const rounds = 5;

          // Вычисляем смещение рулетки
          const targetOffset = -((rounds * totalItems + selectedIndex) * itemWidth);

          // Запускаем анимацию
          rouletteTrack.style.transform = `translateX(${targetOffset}px)`;

          // После окончания анимации подсвечиваем выбранный элемент и показываем модальное окно
          setTimeout(() => {
            selectedItem.classList.add('active');
            prizeText.textContent = 'Вы выиграли ' + selectedItem.querySelector('span').textContent;
            prizeModal.style.display = 'flex';
            spinning = false;
          }, 3000);
        });

        closeBtn.addEventListener('click', () => {
          prizeModal.style.display = 'none';
          // Возвращаем рулетку в исходное положение для следующего запуска
          rouletteTrack.style.transform = 'translateX(0)';
        });
          console.log(data);
        })
        .catch(error => {
          // Обрабатываем ошибки, возникшие при выполнении запроса
          console.error('Fetch error:', error);
        });

          
    </script>
</body>
</html>
