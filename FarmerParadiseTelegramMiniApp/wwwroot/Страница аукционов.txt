@{
    ViewData["Title"] = "Аукционы";
}

<!DOCTYPE html>
<html lang="ru">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Аукционы</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        .hover-scale:hover {
            transform: scale(1.1);
            transition: transform 0.3s ease-in-out;
        }

        .card {
            perspective: 1000px;
        }

        .card-inner {
            position: relative;
            width: 100%;
            height: 250px;
            text-align: center;
            transition: transform 0.8s;
            transform-style: preserve-3d;
        }

        .card.flipped .card-inner {
            transform: rotateY(180deg);
        }

        .card-front, .card-back {
            position: absolute;
            width: 100%;
            height: 100%;
            backface-visibility: hidden;
            border-radius: 15px;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            padding: 10px;
        }

        .card-front {
            background: linear-gradient(45deg, #4f46e5, #9333ea);
            animation: gradientAnimation 5s ease infinite;
            background-size: 200% 200%;
        }

        .card-back {
            background: #ef4444;
            color: white;
            transform: rotateY(180deg);
        }

        
    </style>
</head>

<body class="bg-gray-900 text-white p-6">
    <div class="max-w-md mx-auto space-y-6">

        <!-- Баланс -->
        <div class="flex items-center justify-between bg-gray-800 p-4 rounded-lg shadow-md">
            <div class="flex items-center space-x-3">
                <div class="bg-blue-500 text-white font-bold rounded-full w-10 h-10 flex items-center justify-center text-lg">Я</div>
                <div>
                    <p class="text-gray-400 text-sm">Баланс</p>
                    <p class="text-2xl font-bold">1 Auct</p>
                </div>
            </div>
        </div>

        <!-- Поле для ввода кошелька -->
        <div class="bg-gray-800 p-4 rounded-lg shadow-md" style="padding-bottom: 50px;">
            <p class="text-lg font-bold mb-2">Адрес кошелька</p>
            <div class="flex space-x-2" style="padding-bottom: 25px;">
                <input type="text" id="wallet-input" placeholder="Введите адрес..." class="w-full p-2 rounded-lg bg-gray-900 text-white">
                <button id="save-wallet" class="bg-green-500 hover:bg-green-600 px-4 py-2 rounded-lg font-semibold shadow-md">Сохранить</button>
            </div>
            <p id="wallet-display" class="mt-2 text-lg cursor-pointer hidden">*******************************</p>
            <!-- Кнопка обменять -->
            <div class="text-center">
                <button id="exchange-button" class="bg-red-500 hover:bg-brown-300 transition px-6 py-3 rounded-lg text-white text-lg font-bold shadow-md w-full">Обменять Ton на Auct</button>
                <p class="text-gray-400 text-sm">Информация об обмене</p>
            </div>
        </div>

        <!-- Новые карточки -->
        <div class="grid grid-cols-2 gap-4">
            @for (var i = 1; i <= 4; i++)
            {
                <div class="card bg-gray-800 p-4 rounded-lg shadow-md" id="card-@i">
                    <div class="card-inner">
                        <!-- Фронт -->
                        <div class="card-front">
                            <img src="https://via.placeholder.com/100" alt="Поле" class="mx-auto mb-2 rounded-lg">
                            <p class="text-lg font-bold mb-1">Поле #@i</p>
                            <p class="text-green-300 mb-2">Цена: @(i * 10) Auct</p>
                            <button class="buy-btn bg-blue-500 hover:bg-blue-600 px-4 py-2 rounded-lg font-semibold shadow-md" data-id="@i">Купить</button>
                        </div>
                        <!-- Бэк -->
                        <div class="card-back">
                            <p class="text-xl font-bold mb-2">Продано!</p>
                            <p id="timer-@i" class="text-lg">00:05</p>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
    <script>
        const buttons = document.querySelectorAll('.buy-btn');
        buttons.forEach(button => {
            button.addEventListener('click', () => {
                const id = button.getAttribute('data-id');
                const card = document.getElementById(`card-${id}`);
                const timerElement = document.getElementById(`timer-${id}`);

                // Переворачиваем карточку
                card.classList.add('flipped');
                button.disabled = true;

                // Запускаем таймер на 5 секунд
                startTimer(timerElement, 5, () => {
                    card.classList.remove('flipped');
                    button.disabled = false;
                });
            });
        });

        function startTimer(timerElement, duration, onFinish) {
            let time = duration;
            timerElement.textContent = formatTime(time);
            const interval = setInterval(() => {
                time--;
                timerElement.textContent = formatTime(time);
                if (time <= 0) {
                    clearInterval(interval);
                    if (typeof onFinish === 'function') {
                        onFinish();
                    }
                }
            }, 1000);
        }

        function formatTime(seconds) {
            return `00:${seconds < 10 ? '0' : ''}${seconds}`;
        }
    </script>
    <!-- Modal -->
    <div id="exchange-modal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center hidden">
        <div class="bg-gray-800 p-6 rounded-lg max-w-md w-full relative">
            <!-- Контент для случая, когда адрес сохранён -->
            <div id="modal-saved" class="hidden flex flex-col items-center">
                <img src="~/img/wallet.svg" alt="Exchange Image" width="200" height="200" style="margin-bottom:30px;">
                <p>Ваш адрес</p>
                <p id="modal-wallet-address" style="margin-bottom:30px;"> </p>
                <p style="margin-bottom:30px;">минимальное пополнение от 3 ton, сумма менее будет отправлена в общий счёт</p>
                <button id="close-modal-saved" class="bg-blue-500 hover:bg-blue-600 px-4 py-2 rounded-lg">Закрыть окно</button>
            </div>
            <!-- Контент для случая, когда адрес не сохранён -->
            <div id="modal-unsaved" class="hidden flex flex-col items-center">
                <p style="margin-bottom:30px;">напишите и сохраните адрес</p>
                <button id="close-modal-unsaved" class="bg-blue-500 hover:bg-blue-600 px-4 py-2 rounded-lg">Закрыть окно</button>
            </div>
        </div>
    </div>

    <script>
        // Кнопки покупки и переворот карточек
        const buttons = document.querySelectorAll('.buy-btn');
        buttons.forEach(button => {
            button.addEventListener('click', () => {
                const id = button.getAttribute('data-id');
                const card = document.getElementById(`card-${id}`);
                card.classList.add('flipped');
                button.disabled = true;
                startTimer(`timer-${id}`, 2 * 60 * 60, () => {
                    card.classList.remove('flipped');
                    button.disabled = false;
                });
            });
        });

        function startTimer(timerId, duration, onFinish) {
            const timerElement = document.getElementById(timerId);
            let time = duration;
            const interval = setInterval(() => {
                const hours = Math.floor(time / 3600);
                const minutes = Math.floor((time % 3600) / 60);
                const seconds = time % 60;
                timerElement.textContent = `${pad(hours)}:${pad(minutes)}:${pad(seconds)}`;
                if (time <= 0) {
                    clearInterval(interval);
                    timerElement.textContent = "02:00:00";
                    if (typeof onFinish === 'function') {
                        onFinish();
                    }
                } else {
                    time--;
                }
            }, 1000);
        }

        function pad(num) {
            return num < 10 ? "0" + num : num;
        }

        // Сохранение кошелька
        document.getElementById('save-wallet').addEventListener('click', function () {
            let walletInput = document.getElementById('wallet-input');
            let walletDisplay = document.getElementById('wallet-display');
            if (walletInput.value.trim() !== "") {
                walletDisplay.setAttribute('data-wallet', walletInput.value);
                walletDisplay.textContent = "**********";
                walletDisplay.classList.remove('hidden');
                walletInput.classList.add('hidden');
                this.classList.add('hidden');
            }
        });

        document.getElementById('wallet-display').addEventListener('click', function () {
            let walletInput = document.getElementById('wallet-input');
            let saveButton = document.getElementById('save-wallet');
            walletInput.classList.remove('hidden');
            saveButton.classList.remove('hidden');
            this.classList.add('hidden');
        });

        document.getElementById('exchange-button').addEventListener('click', function () {
            let walletDisplay = document.getElementById('wallet-display');
            let modal = document.getElementById('exchange-modal');
            let modalSaved = document.getElementById('modal-saved');
            let modalUnsaved = document.getElementById('modal-unsaved');
            let modalWalletAddress = document.getElementById('modal-wallet-address');
            if (walletDisplay.classList.contains('hidden')) {
                modalUnsaved.classList.remove('hidden');
                modalSaved.classList.add('hidden');
            } else {
                modalWalletAddress.textContent = walletDisplay.getAttribute('data-wallet');
                modalSaved.classList.remove('hidden');
                modalUnsaved.classList.add('hidden');
            }
            modal.classList.remove('hidden');
        });

        document.getElementById('close-modal-saved').addEventListener('click', function () {
            document.getElementById('exchange-modal').classList.add('hidden');
        });

        document.getElementById('close-modal-unsaved').addEventListener('click', function () {
            document.getElementById('exchange-modal').classList.add('hidden');
        });
    </script>
</body>
</html>
